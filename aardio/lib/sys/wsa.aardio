//wsa 安卓子系统
import winex;
import winex.key;
import com.shell;
import fsys.lnk;

namespace sys.wsa;

path = lambda() ..io.exist( ..io.appData("\Microsoft\WindowsApps\MicrosoftCorporationII.WindowsSubsystemForAndroid_8wekyb3d8bbwe\WsaClient.exe") ) 
	|| "WsaClient.exe";

start = lambda() ..raw.execute(path());

restart = lambda() ..raw.execute(path(),"/restart");

shutdown = lambda() ..raw.execute(path(),"/shutdown");

uninstall = lambda(package) ..raw.execute(path(),`/uninstall "`+package+`"`);

launch = lambda(package) ..raw.execute(path(),`/launch wsa://"`+package+`"`);

modify = lambda(package) ..raw.execute(path(),`/modify "`+package+`"`);

androidDeveloperSettings = lambda() ..raw.execute(path(),"/deeplink wsa-client://developer-settings");

androidSettings = lambda() ..raw.execute("wsa://com.android.settings")

settings = lambda() ..com.shell.activateApp("WindowsSubsystemForAndroid");

listPackages = function(){
	var result = {};
	
	..fsys.lnk.enum( 
    	function(dir,filename,fullpath,target,arguments){ 
        	var package = arguments ? ..string.match(arguments,"/launch\s+wsa\://(.+)");
        	
        	if(package){
          		..table.push(result,{
          			name = ..string.match(filename,"(.+)\.\w+$");
          			package = package;
          			url = "wsa://"+package
          		})
        	}
    	},..io.getSpecial(0xb/*_CSIDL_STARTMENU*/,"Programs")
	);
	
	return result;	
}

findPackage = function(name){
 	var packages = listPackages();
 	for(i,pk in packages){
 		
 		if( ..string.cmpMatch(pk.name,name)
 			|| ..string.cmpMatch(pk.package,name) ){
 			return pk;
 		}
 	}
} 

isInstalled = lambda() !!..com.shell.findApp(,"WindowsSubsystemForAndroid");

findWindow = function(pk){
	return ..winex.find("@"+pk,"");
}

fullscreen = function(v){
	if(type.isString(v)){
		var cls = v;
		v = findWindow(cls); 
		if(!v) return false;
	} 
	
	..win.setForeground(v);
	..winex.key.click(v,"F11");
	return true;
}

/**intellisense(sys.wsa)
path() = 返回 "WsaClient.exe" 路径
start() = 启动安卓子系统。\n如果安卓子系统已启动仍然可以成功执行此函数。\n调用 process.adb.connect 以前最好调用一下。\n\n此函数成功返回 true ，\n如果未安装安卓子系统时返回 false
shutdown() = 关闭安卓子系统
uninstall(__) = 卸载指定的应用，参数指定应用包名
launch(__) = 打开指定的应用，参数指定应用包名
modify(__) = 设置指定的应用，参数指定应用包名
androidDeveloperSettings() = 打开安卓开发者设置窗口
androidSettings() = 打开安卓设置窗口
settings() = 打开安卓子系统设置程序
listPackages() = 返回所有安装到开始菜单的安卓应用程序信息。\n也可以用 process.adb.listPackages 查询安卓系统内的应用列表
findPackage(__) = 查找并返回已安装到开始菜单的安卓应用程序信息。\n参数指定在应用显示名称或包名中搜索的关键词。\n成功返回包含应用信息的表对象
isInstalled() = 检测安卓子系统是否安装
findWindow(__) = 查找安卓应用窗口，成功返回窗口句柄。\n参数 @1 指安卓包名
fullscreen(__) = 切换全屏。\n参数 @1 指定安卓包名或窗口句柄
end intellisense**/

/**intellisense()
sys.wsa = 安卓子系统工具函数库。\n更多与安卓系统有关的功能请参考 process.adb 扩展库
end intellisense**/