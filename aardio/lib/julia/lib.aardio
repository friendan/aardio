//lib 加载运行时
import win.path;
import zlib.httpFile;

namespace julia.lib;

var juliaVersion = ..string.getenv("JULIA_VERSION") || "1.9.4";
var juliaBinDir = ..io.appData("aardio\std\julia\julia-"+juliaVersion+"\bin\")	

if(!..string.match(juliaVersion,"\d+\.\d+\.\d+")){
	error("错误格式: JULIA_VERSION",2);
}
..string.setenv("JULIA_BINDIR",juliaBinDir);
..win.path.add( juliaBinDir );
//..win.path.add(..io.appData("aardio\std\julia\julia-1.6.1\depot"),"JULIA_DEPOT_PATH"); 

var juliaProject = ..string.getenv("JULIA_PROJECT")  
if(!..io.exist(juliaProject)){
	juliaProject = ..io.fullpath("\");
	..string.setenv("JULIA_PROJECT",juliaProject);
} 
 ::Kernel32.SetErrorMode(0)
var dllPath = ..io.joinpath(juliaBinDir,"\libjulia.dll");

if(!..io.exist(dllPath)){ 
	if(! ..zlib.httpFile.download("https://mirrors.tuna.tsinghua.edu.cn/julia-releases/bin/winnt/x86/"
		+..string.match(juliaVersion,"\d+\.\d+")+"/julia-"+juliaVersion+"-win32.zip"
	,"正在下载 Julia 语言",..io.appData("aardio/std/julia/down"),..io.appData("aardio/std/julia")) ){
		return;
	}
}

::LibJulia = ..raw.loadDll(dllPath,,"cdecl");
(::LibJulia.jl_init || ::LibJulia.jl_init__threading)();
..table.gc(self,function(){
	::LibJulia.jl_atexit_hook(0);
});

/**intellisense(::)
::LibJulia = julia.lib  加载的 libjulia.dll 组件\n!dllmodule.
end intellisense**/

