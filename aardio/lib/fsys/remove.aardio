//remove 移除操作
import fsys;
import fsys.safepath;
namespace fsys;

class remove {
	ctor( path,subfiles ){
		path = ..fsys.safepath(path);
		if( ..io.exist(path) ){
			if(..fsys.isDir(path)){
				var dirs = {};
				..fsys.enum( path, "*.*",
					function(d,f,fullpath){ 
						if(f)  ..io.remove(fullpath) 
						else ..table.push(dirs,fullpath);
					},true
				);
				
				for(i=#dirs;1;-1)::Kernel32.RemoveDirectory(dirs[i]); 
				
				if(subfiles) return true;
				if( ::Kernel32.RemoveDirectory(path) ) return true;
			}
			else {
				if(subfiles) return;
				if( ..io.remove(path) ) return true;
			}
		}
	
		if(subfiles) return;
		return ::Kernel32.MoveFileExB(path,null,4/*_MOVEFILE_DELAY_UNTIL_REBOOT*/);
	}; 
}

/**intellisense()
fsys.remove = 用于删除目录或文件\n支持 fsys.delete 函数无法删除的畸形路径,\n此函数库不在 fsys 库内需要单独导入
fsys.remove(.(path) = 移除参数 @1 指定路径的目录或文件
fsys.remove(.(path,true) = 清空参数 @1 指定路径的目录，但不删除目录本身。\n如果参数 @1 指定的不是一个存在的目录，忽略不执行任何操作
end intellisense**/