<?
import string.markdown;
var markdown = string.markdown();

var htmlTitle,htmlBody;
if(string.endWith(request.path,".html",true)){
	request.path = string.left(request.path,-6) + ".md"
}

if(string.endWith(request.path,".md",true)){
	if(request.path == "/search-results.md"){
		var md = thread.get("doc://search-results.html") : "搜索结果为空！";
		
		htmlTitle = string.match(md,"\n\s*\#\s+(\N+)") ||  string.match(md,"\n\s*\#\#\s+(\N+)") || "aardio 文档" ;
		htmlBody = markdown.render(md);
	}
	elseif( string.startWith(request.path,"/library-reference/") ){
		var libPath = string.replace(request.path,"^/library-reference/","~/lib/");
		libPath = fsys.path.replaceExt(libPath,".aardio");
		
		import ide.doc.libraryMd; 
		var md = ide.doc.libraryMd(libPath);
		if(!md){
			htmlBody = "找不到文件：" + request.path;
		}
		else {
			md = tostring( md );	
			
			htmlTitle = string.match(md,"!\N\s*\#\s+(\N+)") ||  string.match(md,"!\N\s*\#\#\s+(\N+)") || request.htmlTitle || "aardio 文档" ;
			htmlBody = markdown.render(md); 		
		} 
	}
	elseif( string.startWith(request.path,"/example/") ){ 
		request.path = string.left(request.path,-4) + ".aardio" 
		 
		htmlTitle = "范例"
		var code = string.load("~"+request.path ); 
		if(code){  
			code = ..string.replace(code,"@@file://~/example/","doc://example/");
			
			htmlBody = `<a href="javascript:void(0)" onclick="javascript:external.openExample('`
				+ string.repline("~"+request.path,"\\","/") 
				+`')">在代码编辑器中打开</a>` 
				 
			for title,link in string.gmatch(code,"!\N\s*<//>\s*(\N+?)<<：>|\:>?\s+<//\s*>?(<https>|<http>|<doc>\://[^\s()]+)") { 
				if(string.find(title,":") && !string.find(title,"\a\.\a\w+\(") && !string.indexOf(title,"//")){
					title = string.match(title,"《\s*(.+)\s*》") || title;
					
					htmlBody = htmlBody	++ ` | <a href="`+link+`">`+title+`</a>` 
				} 
			}
		 	
			for title,link in string.gmatch(code,"!\N\s*<//>?!(\N+?)<<：>|\:>?\s+(<https>|<http>|<doc>\://[^\s()]+)") { 
				if(string.find(title,":" )&& !string.find(title,"\a\.\a\w+\(") && !string.indexOf(title,"//") ){
					title = string.match(title,"《\s*(.+)\s*》") || title;
					
					htmlBody = htmlBody	++ ` | <a href="`+link+`">`+title+`</a>`
				}
			}
			
			htmlBody = htmlBody	++ markdown.renderCode(code,"aardio");   
		}
	}
	else {
		var md = string.load(request.path);
		//doc://library-guide/builtin/io/io.file.html
		if(!md){
			htmlBody = "找不到文件：" + request.path;
		}
		else{
			htmlTitle = string.match(md,"\n\s*\#\s+(\N+)") ||  string.match(md,"\n\s*\#\#\s+(\N+)") || "aardio 文档" ;
			htmlBody = markdown.render(md);
		}
	}  
} 
elseif( string.startWith(request.path,"/example/") ){ 
	htmlTitle = "范例"
	var code = string.load("~"+request.path ); 
	if(code){  
		
		code = ..string.replace(code,"@@file://~/example/","doc://example/");
	 
		htmlBody = `<a href="javascript:void(0)" onclick="javascript:external.openExample('`
				+ string.repline("~"+request.path,"\\","/") 
				+`')">在代码编辑器中打开</a>` 
				 
		for title,link in string.gmatch(code,"!\N\s*<//>\s*(\N+?)<<：>|\:>?\s+<//\s*>?(<https>|<http>|<doc>\://[^\s()]+)") { 
			if(string.find(title,":") && !string.find(title,"\a\.\a\w+\(") && !string.indexOf(title,"//") ){
				title = string.match(title,"《\s*(.+)\s*》") || title;
				
				htmlBody = htmlBody	++ ` | <a href="`+link+`">`+title+`</a>` 
			} 
		}
		 
		for title,link in string.gmatch(code,"!\N\s*<//>?!(\N+?)<<：>|\:>?\s+(<https>|<http>|<doc>\://[^\s()]+)") { 
			if(string.find(title,":") && !string.find(title,"\a\.\a\w+\(") && !string.indexOf(title,"//") ){
				title = string.match(title,"《\s*(.+)\s*》") || title;
				
				htmlBody = htmlBody	++ ` | <a href="`+link+`">`+title+`</a>`
			}
		}
			
		htmlBody = htmlBody	++ markdown.renderCode(code,"aardio");  
			
	} 
}

htmlBody = string.replace(htmlBody
	,"\<code\>(<@@Ctrl@>|<@@Shift@>|<@@Alt@>|<Fn>|<[Ff]\d>!\W.*?)\</code\>"
	,function(kbd){
		var items = string.splitEx(kbd,"\s*\+\s*"); 
		for(i,v in items){
			items[i] = "<kbd>"+v+"</kbd>"
		} 
		
		return string.join(items,"+");
	}
)	

?>
<!DOCTYPE html>
<html>
<head>
<meta charset="utf-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge" />
<title>aardio 编程语言文档 - <?=htmlTitle?></title>
<script>
!function(e,t){"function"==typeof define&&define.amd?define(t):"object"==typeof exports?module.exports=t():t()}(0,function(){var o="details",i="summary";(function(){var e=document.createElement(o);if(!("open"in e))return!1;e.innerHTML="<"+i+">a</"+i+">b",document.body.appendChild(e);var t=e.offsetHeight;e.open=!0;var n=t!=e.offsetHeight;return document.body.removeChild(e),n})()||(document.documentElement.className+=" no-details",window.addEventListener("click",function(e){if("summary"===e.target.nodeName.toLowerCase()){var t=e.target.parentNode;if(!t)return;t.getAttribute("open")?(t.open=!1,t.removeAttribute("open")):(t.open=!0,t.setAttribute("open","open"))}}),function(e,t){if(document.getElementById(e))return;var n=document.createElement("style");n.id=e,n.innerHTML=t,document.getElementsByTagName("head")[0].appendChild(n)}("details-polyfill-style","html.no-details "+o+":not([open]) > :not("+i+") { display: none; }\nhtml.no-details "+o+" > "+i+':before { content: "▶"; display: inline-block; font-size: .8em; width: 1.5em; }\nhtml.no-details '+o+"[open] > "+i+':before { content: "▼"; }'))});
</script>

<script>
document.onmouseup = document.onkeyup = document.onselectionchange = function() {
    var selectedText = getSelectedText();
    if (selectedText) {
        external.onSelectedText(selectedText);
    }
    else {
    	external.onSelectedText()
    }
    
};

function getSelectedText() {
    var text = "";
    if (window.getSelection) {
        text = window.getSelection().toString();
    } else if (document.selection && document.selection.type != "Control") {
        text = document.selection.createRange().text;
    }
    return text;
}
 
</script>
<link rel="stylesheet" href="/style.css">
<script><?=$"/index.js"?></script>
</head>
<body>
<?=htmlBody?>

</body>
</html>	 