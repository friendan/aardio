//执行命令
import com.cad;
var cad = com.cad();
cad.ShowForeground();//前置并显示窗口

//可以执行 AutoCAD 里所有命令以及 AutoLISP 表达式，跟在 AutoCAD 里敲命令效果一样。 
//支持模板语法： chm://the%20language/template_syntax.html
cad.SendCommand(`
(setq c:hello nil)
(defun c:hello(/ name)
(set 'name (getstring "What's your name? "))
(set 'msg (strcat "Hello, " name <?= 
	
	/*
	支持模板语法: chm://the%20language/template_syntax.html
	
	模板输出支持以下规则：
	一、如果 aardio 输出非空数组或多个参数，执行以下操作：
		1、数值直接输输出，flase 转为 0 ，true 转为 1
		2、数组或嵌套的数组参数都会转换为 LISP 表（首尾有括号），
	   	如果 cons 字段为 true 则转换为点对（首尾有括号）。
		3、包含 car,cdr 成员的表会转换为点对（首尾有括号）。
		
		其他类型统一调用 tostring() 转换为字符串，然后按 LISP 语法进行转义，首尾加双引号。
		最后将所有参数以空格分开并输出到 LISP 代码（首尾不加括号）。
	
	二、如果 aardio 输了出单个包含 car,cdr 成员的表会转换为点对（首尾有括号）。
	
	三、如果 aardio 输出其他单个参数，则直接将输出值转换为字符串并置入 LISP 代码。
	
	LISP 中的模板由 com.cad.loadcode() 函数解析，细节请参考该函数源码。
	*/
	time(),"这是 aardio 对象" 
?>))
(write-line msg))
hello`,/*可选用 参数@2 指定模板 owner 参数*/);

//aardio 表转 LISP 点对，首尾自动加括号
//cad.SendCommand(`(print '<?= { car = "点对 car"; cdr = "点对 cdr" } ?> )` );
 
//aardio 数组输出为 LISP 列表，首尾不会自动加括号
//cad.SendCommand(`(print '(<?= {1,2,3,{"嵌套"}} ?>) )` );
 
/*
cad.SendCommand 是同步执行命令，
如果要异步执行命令请使用 cad.PostCommand 
*/ 